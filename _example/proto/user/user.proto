syntax = "proto3";
package user;
import "hopeio/utils/enum/enum.proto";
import "hopeio/utils/patch/go.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "hopeio/utils/validator/validator.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "danielvladco/protobuf/graphql.proto";

option java_package = "cherry.hopeio.protobuf.user";
option go_package = "github.com/hopeio/cherry/_example/protobuf/user";

option (go.file) = {no_enum_prefix:true};
option (enum.enum_gqlgen_all) = true;

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0"
  }
};

message User {
  uint64 id = 1 [(go.field) = {tags:'gorm:"primaryKey;"'}];
  string name = 2 [(go.field) = {tags:'gorm:"size:10;not null" comment:"昵称"'}];
  string password = 5 [(go.field) = {tags:'json:"-" gorm:"size:32;not null" validate:"gte=8,lte=15" comment:"密码"'}];
  string mail = 6 [(go.field) = {tags:'gorm:"size:32" validate:"email" comment:"邮箱"'}];
  string phone = 7 [(go.field) = {tags:'gorm:"size:32" validate:"phone" comment:"手机号"'}];
  // 性别，0未填写，1男，2女
  Gender gender = 8 [(go.field) = {tags:'gorm:"type:int2;default:0"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    type:INTEGER
  }];
  Role role = 24 [(go.field) = {tags:'gorm:"type:int2;default:0"'}];
  UserStatus status = 28 [(go.field) = {tags:'gorm:"type:int2;default:0"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only:true
  }];
  string createdAt = 25 [(go.field) = {tags:'gorm:"type:timestamptz(6);default:now();index"'}];
  string activatedAt = 3 [(go.field) = {tags:'gorm:"<-:false;type:timestamptz(6);index"'}];
  string deletedAt = 27 [(go.field) = {tags:'gorm:"<-:false;type:timestamptz(6);index"'}];
  // uint32 isDeleted = 29 [(go.field) = {tags:'gorm:"default:0"'}];
}

message SignupReq {
  // 密码
  string password = 4 [(go.field) = {tags:'validate:"required,gte=6,lte=15" comment:"密码"'}, (validator.field) = {
    length_gt: 5,
    custom_error: "密码最短6位"
  }, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {title: "密码",
    min_length: 6}];
  string name = 1 [(go.field) = {tags:'validate:"required,gte=3,lte=10" comment:"昵称"'}];
  Gender gender = 3 [(go.field) = {tags:'validate:"required" comment:"性别"'}];
  // 邮箱
  string mail = 6 [(go.field) = {tags:'validate:"omitempty,email" comment:"邮箱"'}];
  // 手机号
  string phone = 7 [(go.field) = {tags:'validate:"omitempty,phone" comment:"手机号"'}];
  // 验证码
  string vCode = 8 [(go.field) = {tags:'validate:"required" comment:"验证码"'}];
}

// 用户性别
enum Gender{
  option (go.enum) = {stringer_name: 'OrigString'};
  GenderPlaceholder = 0 [(enum.enumvalue_cn)= "占位"];
  GenderUnfilled = 1 [(enum.enumvalue_cn)= "未填"];
  GenderMale = 2 [(enum.enumvalue_cn)= "男"];
  GenderFemale = 3 [(enum.enumvalue_cn)= "女"];
}

// 用户角色
enum Role {
  option (go.enum) = {stringer_name: 'OrigString'};
  PlaceholderRole = 0 [(enum.enumvalue_cn)= "占位"];
  RoleNormal = 1 [(enum.enumvalue_cn)= "普通用户"];
  RoleAdmin = 2 [(enum.enumvalue_cn)= "管理员"];
  RoleSuperAdmin = 3 [(enum.enumvalue_cn)= "超级管理员"];
}

// 用户角色
enum UserStatus {
  option (go.enum) = {stringer_name: 'OrigString'};
  option (enum.enum_jsonmarshal) = false;
  UserStatusPlaceholder = 0 [(enum.enumvalue_cn)= "占位"];
  UserStatusInActive = 1 [(enum.enumvalue_cn)= "未激活"];
  UserStatusActivated = 2 [(enum.enumvalue_cn)= "已激活"];
  UserStatusFrozen = 3 [(enum.enumvalue_cn)= "已冻结"];
  UserStatusDeleted = 4 [(enum.enumvalue_cn)= "已注销"];
}

enum UserErr {
  option (go.enum) = {stringer_name: 'OrigString'};
  option (enum.enum_errcode) = true;
  option (enum.enum_jsonmarshal) = false;
  UserErrPlaceholder = 0 [(enum.enumvalue_cn)= "占位"];
  UserErrLogin = 1000 [(enum.enumvalue_cn)= "用户名或密码错误"];
  UserErrNoActive = 1001 [(enum.enumvalue_cn)= "未激活账号"];
  UserErrNoAuthority = 1002 [(enum.enumvalue_cn)= "无权限"];
  UserErrLoginTimeout = 1003 [(enum.enumvalue_cn)= "登录超时"];
  UserErrInvalidToken = 1004 [(enum.enumvalue_cn)= "Token错误"];
  UserErrNoLogin = 1005 [(enum.enumvalue_cn)= "未登录"];
}

service UserService {
  //注册
  rpc Signup (SignupReq) returns (google.protobuf.StringValue) {
    option (google.api.http) = {
      post: "/api/v1/user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["用户相关接口", "v1.0.0"]
      summary : "注册"
      description : "注册接口"
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: MUTATION};
  }
}