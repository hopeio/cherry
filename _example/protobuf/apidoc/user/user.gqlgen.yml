schema:
  - ./*.graphql

# Where should the generated server code go?
exec:
  filename: ../../user/user.generated.gql.go
  package: user

# Enable Apollo federation support
federation:
  filename: ../../user/user.federation.gql.go
  package: user

model:
  filename: ../../user/user.model.gql.go
  package: user

autobind:
  - github.com/hopeio/protobuf/request
  - github.com/hopeio/protobuf/response
  - github.com/hopeio/protobuf/oauth
  - github.com/hopeio/protobuf/time
  - github.com/hopeio/protobuf/time/deletedAt

struct_fields_always_pointers: false

models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
  Id:
    model:
      - github.com/99designs/gqlgen/graphql.ID
  UUID:
    model:
      - github.com/99designs/gqlgen/graphql.UUID
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
      - github.com/hopeio/gox/net/http/graphql.Uint
      - github.com/hopeio/gox/net/http/graphql.Uint64
      - github.com/hopeio/gox/net/http/graphql.Uint32
  Int32:
    model: github.com/99designs/gqlgen/graphql.Int32
  Int64:
    model: github.com/99designs/gqlgen/graphql.Int64
  Uint8:
    model: github.com/hopeio/gox/net/http/graphql.Uint8
  Uint:
    model:
      - github.com/hopeio/gox/net/http/graphql.Uint
      - github.com/hopeio/gox/net/http/graphql.Uint64
      - github.com/hopeio/gox/net/http/graphql.Uint32
  Uint32:
      model: github.com/hopeio/gox/net/http/graphql.Uint32
  Uint64:
      model: github.com/hopeio/gox/net/http/graphql.Uint64
  Float32:
    model: github.com/hopeio/gox/net/http/graphql.Float32
  Float64:
    model: github.com/hopeio/gox/net/http/graphql.Float64
  Float:
    model: github.com/99designs/gqlgen/graphql.Float
  Bytes:
    model: github.com/hopeio/gox/net/http/graphql.Bytes
